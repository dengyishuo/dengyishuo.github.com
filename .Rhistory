),
lon = c(          # 市区精确经度（WGS84）
113.2788, 113.2758, 113.3002,
113.2726, 113.2805, 113.2865,
113.2776, 113.2790, 113.2782, 113.2820,
113.3150, 113.3145, 113.3160
),
lat = c(          # 市区精确纬度（WGS84）
40.0972, 40.0961, 40.1045,
40.0935, 40.0950, 40.1005,
40.0968, 40.0975, 40.0970, 40.0920,
40.0820, 40.0815, 40.0830
)
# 转换为空间点对象（与地图坐标系一致）
attractions_sf <- st_as_sf(
datong_attractions,
coords = c("lon", "lat"),
crs = 4326  # WGS84坐标系（GeoJSON默认）
)
# ----------------------
# 2. 直接读取大同市地图数据（无需筛选）
# ----------------------
# 读取大同市边界数据（datong.json应仅包含大同市范围）
datong_map <- st_read("assets/data/datong.json", quiet = TRUE)
# 强制统一坐标系为WGS84（避免可能的坐标系不匹配）
datong_map <- st_transform(datong_map, crs = 4326)
# 检查数据是否正确加载（应显示1个feature）
cat("大同市地图数据加载情况：", nrow(datong_map), "个区域\n")  # 正常应为1
# ----------------------
# 3. 绘制大同市区地图及景点
# ----------------------
# 计算市区中心点（用于聚焦地图范围）
center_lon <- mean(datong_attractions$lon)
center_lat <- mean(datong_attractions$lat)
ggplot() +
# 绘制大同市区边界（浅灰蓝填充，深蓝色边框）
geom_sf(data = datong_map, fill = "#f0f9ff", color = "#2563eb", linewidth = 1) +
# 标记景点（红色圆点，突出显示）
geom_sf(data = attractions_sf, color = "#dc2626", size = 4, alpha = 0.9) +
# 添加景点标签（自动避重叠）
geom_label_repel(
data = datong_attractions,
aes(x = lon, y = lat, label = name),
family = "SimHei",       # 中文字体
size = 3.5,              # 标签大小
color = "#1e293b",       # 文字颜色
fill = "white",          # 标签背景
alpha = 0.9,             # 透明度
box.padding = 0.2,       # 标签与点的距离
segment.color = "gray50",# 连接线颜色
max.overlaps = 15        # 允许适度重叠（适应密集区域）
) +
# 聚焦大同市区核心范围（去除边缘空白）
coord_sf(
xlim = c(center_lon - 0.1, center_lon + 0.1),  # 经度范围（市区核心）
ylim = c(center_lat - 0.08, center_lat + 0.08),# 纬度范围（市区核心）
expand = FALSE  # 不扩展边界，紧密聚焦
) +
# 标题和主题设置
ggtitle("大同市区景点分布图") +
xlab("经度") +
ylab("纬度") +
theme_minimal() +
theme(
plot.title = element_text(
family = "SimHei",
size = 16,
hjust = 0.5,  # 标题居中
margin = margin(b = 10)
),
axis.title = element_text(family = "SimHei", size = 12),
panel.grid.major = element_line(color = "gray80", linewidth = 0.2),  # 淡化网格线
panel.background = element_rect(fill = "#f8fafc", color = NA)  # 浅灰背景
)
datong_map
ggplot() +
# 绘制大同市区边界（浅灰蓝填充，深蓝色边框）
geom_sf(data = datong_map, fill = "#f0f9ff", color = "#2563eb", linewidth = 1)
View(attractions_sf)
View(datong_attractions)
ggplot() +
# 绘制大同市区边界（浅灰蓝填充，深蓝色边框）
geom_sf(data = datong_map, fill = "grey", color = "blue", linewidth = 1)
# 加载必要的包
library(sf)          # 处理地理空间数据
library(ggplot2)     # 绘图
library(ggrepel)     # 避免标签重叠
library(dplyr)       # 数据处理
library(showtext)    # 中文字体支持
# 设置中文字体
font_add("SimHei", "SimHei.ttf")
showtext_auto()
# ----------------------
# 1. 市区景点数据（平城区、云冈区为主）
# ----------------------
datong_attractions <- data.frame(
name = c(
"华严寺", "善化寺", "法华寺", "大同清真大寺",
"大同纯阳宫", "大同文庙", "大同关帝庙", "大同代王府",
"大同九龙壁", "梁思成博物馆", "大同市美术馆",
"大同市图书馆", "大同市博物馆", "云冈石窟"  # 新增云冈区景点
),
lon = c(          # 精确坐标（匹配核心市区）
113.2788, 113.2758, 113.3002, 113.2726,
113.2805, 113.2865, 113.2776, 113.2790,
113.2782, 113.2820, 113.3150, 113.3145,
113.3160, 113.0869  # 云冈石窟（云冈区）
),
lat = c(          # 精确坐标
40.0972, 40.0961, 40.1045, 40.0935,
40.0950, 40.1005, 40.0968, 40.0975,
40.0970, 40.0920, 40.0820, 40.0815,
40.0830, 40.0645  # 云冈石窟
)
# 转换为空间点对象
attractions_sf <- st_as_sf(
datong_attractions,
coords = c("lon", "lat"),
crs = 4326  # 与地图坐标系一致
)
# ----------------------
# 2. 筛选大同核心市区（平城区、云冈区、新荣区、云州区）
# ----------------------
# 从datong_map中筛选市区范围（排除远郊县）
datong_core <- datong_map %>%
filter(name %in% c("平城区", "云冈区", "新荣区", "云州区"))  # 核心四区
# 检查筛选结果（应显示4个区域）
nrow(datong_core)  # 正常应为4
# ----------------------
# 3. 绘制核心市区地图及景点
# ----------------------
# 计算核心区中心点（聚焦景点密集区域）
core_lon <- mean(datong_attractions$lon)
core_lat <- mean(datong_attractions$lat)
ggplot() +
# 绘制核心市区边界（分区域填充不同颜色）
geom_sf(data = datong_core,
aes(fill = name),  # 按区县区分颜色
color = "black", linewidth = 0.5, alpha = 0.7) +
scale_fill_brewer(palette = "Pastel1") +  # 区县颜色区分
# 标记景点（红色圆点，突出显示）
geom_sf(data = attractions_sf,
color = "#e63946", size = 4, alpha = 0.9) +
# 添加景点标签（避免重叠）
geom_label_repel(
data = datong_attractions,
aes(x = lon, y = lat, label = name),
family = "SimHei", size = 3.2,
color = "#333333", fill = "white",
box.padding = 0.2, segment.size = 0.3,
max.overlaps = 20  # 允许密集区域适度重叠
) +
# 严格限制地图范围（仅显示核心市区）
coord_sf(
xlim = c(112.9, 113.8),  # 经度范围（覆盖核心四区）
ylim = c(39.9, 40.4)     # 纬度范围
) +
# 标题和主题设置
ggtitle("大同核心市区景点分布图") +
labs(fill = "区县") +  # 图例标题
theme_minimal() +
theme(
plot.title = element_text(family = "SimHei", hjust = 0.5, size = 16),
legend.title = element_text(family = "SimHei"),
legend.text = element_text(family = "SimHei"),
legend.position = "bottom"  # 图例放底部
) +
guides(fill = guide_legend(nrow = 1))  # 图例横向排列
ggplot() +
# 绘制大同市区边界（浅灰蓝填充，深蓝色边框）
geom_sf(data = datong_map, fill = "grey", color = "blue", linewidth = 1) +
# 标记景点（红色圆点，突出显示）
geom_sf(data = attractions_sf, color = "#dc2626", size = 4, alpha = 0.9) +
# 添加景点标签（自动避重叠）
geom_label_repel(
data = datong_attractions,
aes(x = lon, y = lat, label = name),
family = "SimHei",       # 中文字体
size = 3.5,              # 标签大小
color = "#1e293b",       # 文字颜色
fill = "white",          # 标签背景
alpha = 0.9,             # 透明度
box.padding = 0.2,       # 标签与点的距离
segment.color = "gray50",# 连接线颜色
max.overlaps = 15        # 允许适度重叠（适应密集区域）
) +
# 聚焦大同市区核心范围（去除边缘空白）
coord_sf(
xlim = c(center_lon - 0.1, center_lon + 0.1),  # 经度范围（市区核心）
ylim = c(center_lat - 0.08, center_lat + 0.08),# 纬度范围（市区核心）
expand = FALSE  # 不扩展边界，紧密聚焦
) +
# 标题和主题设置
ggtitle("大同市区景点分布图") +
xlab("经度") +
ylab("纬度") +
theme_minimal() +
theme(
plot.title = element_text(
family = "SimHei",
size = 16,
hjust = 0.5,  # 标题居中
margin = margin(b = 10)
),
axis.title = element_text(family = "SimHei", size = 12),
panel.grid.major = element_line(color = "gray80", linewidth = 0.2),  # 淡化网格线
panel.background = element_rect(fill = "#f8fafc", color = NA)  # 浅灰背景
)
# 加载必要的包
library(sf)          # 处理地理空间数据
library(ggplot2)     # 绘图
library(ggrepel)     # 避免标签重叠
library(dplyr)       # 数据处理
library(showtext)    # 中文字体支持
# 设置中文字体
font_add("SimHei", "SimHei.ttf")
showtext_auto()
# ----------------------
# 1. 市区景点数据（平城区、云冈区为主）
# ----------------------
datong_attractions <- data.frame(
name = c(
"华严寺", "善化寺", "法华寺", "大同清真大寺",
"大同纯阳宫", "大同文庙", "大同关帝庙", "大同代王府",
"大同九龙壁", "梁思成博物馆", "大同市美术馆",
"大同市图书馆", "大同市博物馆", "云冈石窟"  # 新增云冈区景点
),
lon = c(          # 精确坐标（匹配核心市区）
113.2788, 113.2758, 113.3002, 113.2726,
113.2805, 113.2865, 113.2776, 113.2790,
113.2782, 113.2820, 113.3150, 113.3145,
113.3160, 113.0869  # 云冈石窟（云冈区）
),
lat = c(          # 精确坐标
40.0972, 40.0961, 40.1045, 40.0935,
40.0950, 40.1005, 40.0968, 40.0975,
40.0970, 40.0920, 40.0820, 40.0815,
40.0830, 40.0645  # 云冈石窟
)
# 转换为空间点对象
attractions_sf <- st_as_sf(
datong_attractions,
coords = c("lon", "lat"),
crs = 4326  # 与地图坐标系一致
)
# ----------------------
# 2. 筛选大同核心市区（平城区、云冈区、新荣区、云州区）
# ----------------------
# 从datong_map中筛选市区范围（排除远郊县）
datong_core <- datong_map %>%
filter(name %in% c("平城区", "云冈区", "新荣区", "云州区"))  # 核心四区
# 检查筛选结果（应显示4个区域）
nrow(datong_core)  # 正常应为4
# ----------------------
# 3. 绘制核心市区地图及景点
# ----------------------
# 计算核心区中心点（聚焦景点密集区域）
core_lon <- mean(datong_attractions$lon)
core_lat <- mean(datong_attractions$lat)
ggplot() +
# 绘制核心市区边界（分区域填充不同颜色）
geom_sf(data = datong_core,
aes(fill = name),  # 按区县区分颜色
color = "black", linewidth = 0.5, alpha = 0.7) +
scale_fill_brewer(palette = "Pastel1") +  # 区县颜色区分
# 标记景点（红色圆点，突出显示）
geom_sf(data = attractions_sf,
color = "#e63946", size = 4, alpha = 0.9) +
# 添加景点标签（避免重叠）
geom_label_repel(
data = datong_attractions,
aes(x = lon, y = lat, label = name),
family = "SimHei", size = 3.2,
color = "#333333", fill = "white",
box.padding = 0.2, segment.size = 0.3,
max.overlaps = 20  # 允许密集区域适度重叠
) +
# 严格限制地图范围（仅显示核心市区）
coord_sf(
xlim = c(112.9, 113.8),  # 经度范围（覆盖核心四区）
ylim = c(39.9, 40.4)     # 纬度范围
) +
# 标题和主题设置
ggtitle("大同核心市区景点分布图") +
labs(fill = "区县") +  # 图例标题
theme_minimal() +
theme(
plot.title = element_text(family = "SimHei", hjust = 0.5, size = 16),
legend.title = element_text(family = "SimHei"),
legend.text = element_text(family = "SimHei"),
legend.position = "bottom"  # 图例放底部
) +
guides(fill = guide_legend(nrow = 1))  # 图例横向排列
install.packages("ggplot2")
install.packages("sf")
library(ggplot2)
library(sf)
datong_map <- st_read("assets/data/datong.json", quiet = TRUE)
pingcheng_map <- datong_map[datong_map$adcode == 140213, ]
attractions <- data.frame(
name = c("华严寺", "善化寺", "九龙壁", "大同古城墙", "大同博物馆"),
lon = c(113.288, 113.292, 113.310, 113.295, 113.330),  # 经度
lat = c(40.070, 40.065, 40.072, 40.070, 40.085)  # 纬度
)
ggplot() +
# 绘制平城区地图
geom_sf(data = pingcheng_map, fill = "#f0f9ff", color = "#2563eb", linewidth = 1) +
# 标记景点
geom_point(data = attractions, aes(x = lon, y = lat), color = "red", size = 3) +
# 添加景点标签
geom_text(data = attractions, aes(x = lon, y = lat, label = name),
nudge_y = 0.01, # 稍微向上调整标签位置，避免覆盖景点标记点
size = 3, color = "black") +
theme_void() +  # 去除默认的坐标轴等元素
ggtitle("大同平城区地图及主要景点")
library(ggplot2)
library(sf)
datong_map <- st_read("assets/data/datong.json", quiet = TRUE)
pingcheng_map <- datong_map[datong_map$adcode == 140213, ]
attractions <- data.frame(
name = c("华严寺", "善化寺", "九龙壁", "大同古城墙", "大同博物馆"),
lon = c(113.288, 113.292, 113.310, 113.295, 113.330),  # 经度
lat = c(40.070, 40.065, 40.072, 40.070, 40.085)  # 纬度
)
ggplot() +
# 绘制平城区地图
geom_sf(data = pingcheng_map, fill = "#f0f9ff", color = "#2563eb", linewidth = 1) +
# 标记景点
geom_point(data = attractions, aes(x = lon, y = lat), color = "red", size = 3) +
# 添加景点标签
geom_text(data = attractions, aes(x = lon, y = lat, label = name),
nudge_y = 0.01, # 稍微向上调整标签位置，避免覆盖景点标记点
size = 3, color = "black") +
theme_void() +  # 去除默认的坐标轴等元素
ggtitle("大同平城区地图及主要景点")
# 加载必要的包
library(sf)          # 处理地理空间数据
library(ggplot2)     # 绘图
library(ggrepel)     # 避免标签重叠
library(dplyr)       # 数据处理
library(showtext)    # 中文字体支持
# 设置中文字体
font_add("SimHei", "SimHei.ttf")
showtext_auto()
# ----------------------
# 1. 市区景点数据（平城区、云冈区为主）
# ----------------------
datong_attractions <- data.frame(
name = c(
"华严寺", "善化寺", "法华寺", "大同清真大寺",
"大同纯阳宫", "大同文庙", "大同关帝庙", "大同代王府",
"大同九龙壁", "梁思成博物馆", "大同市美术馆",
"大同市图书馆", "大同市博物馆", "云冈石窟"  # 新增云冈区景点
),
lon = c(          # 精确坐标（匹配核心市区）
113.2788, 113.2758, 113.3002, 113.2726,
113.2805, 113.2865, 113.2776, 113.2790,
113.2782, 113.2820, 113.3150, 113.3145,
113.3160, 113.0869  # 云冈石窟（云冈区）
),
lat = c(          # 精确坐标
40.0972, 40.0961, 40.1045, 40.0935,
40.0950, 40.1005, 40.0968, 40.0975,
40.0970, 40.0920, 40.0820, 40.0815,
40.0830, 40.0645  # 云冈石窟
)
# 转换为空间点对象
attractions_sf <- st_as_sf(
datong_attractions,
coords = c("lon", "lat"),
crs = 4326  # 与地图坐标系一致
)
# ----------------------
# 2. 筛选大同核心市区（平城区、云冈区、新荣区、云州区）
# ----------------------
# 从datong_map中筛选市区范围（排除远郊县）
datong_core <- datong_map %>%
filter(name %in% c("平城区", "云冈区", "新荣区", "云州区"))  # 核心四区
# 检查筛选结果（应显示4个区域）
nrow(datong_core)  # 正常应为4
# ----------------------
# 3. 绘制核心市区地图及景点
# ----------------------
# 计算核心区中心点（聚焦景点密集区域）
core_lon <- mean(datong_attractions$lon)
core_lat <- mean(datong_attractions$lat)
ggplot() +
# 绘制核心市区边界（分区域填充不同颜色）
geom_sf(data = datong_core,
aes(fill = name),  # 按区县区分颜色
color = "black", linewidth = 0.5, alpha = 0.7) +
scale_fill_brewer(palette = "Pastel1") +  # 区县颜色区分
# 标记景点（红色圆点，突出显示）
geom_sf(data = attractions_sf,
color = "#e63946", size = 4, alpha = 0.9) +
# 添加景点标签（避免重叠）
geom_label_repel(
data = datong_attractions,
aes(x = lon, y = lat, label = name),
family = "SimHei", size = 3.2,
color = "#333333", fill = "white",
box.padding = 0.2, segment.size = 0.3,
max.overlaps = 20  # 允许密集区域适度重叠
) +
# 严格限制地图范围（仅显示核心市区）
coord_sf(
xlim = c(112.9, 113.8),  # 经度范围（覆盖核心四区）
ylim = c(39.9, 40.4)     # 纬度范围
) +
# 标题和主题设置
ggtitle("大同核心市区景点分布图") +
labs(fill = "区县") +  # 图例标题
theme_minimal() +
theme(
plot.title = element_text(family = "SimHei", hjust = 0.5, size = 16),
legend.title = element_text(family = "SimHei"),
legend.text = element_text(family = "SimHei"),
legend.position = "bottom"  # 图例放底部
) +
guides(fill = guide_legend(nrow = 1))  # 图例横向排列
# 加载必要的包
library(sf)          # 处理空间数据
library(ggplot2)     # 绘图
library(ggrepel)     # 智能避免标签重叠（核心优化）
library(dplyr)       # 数据处理
library(showtext)    # 中文字体支持
# 设置中文字体（确保标签无乱码）
font_add("SimHei", "SimHei.ttf")
showtext_auto()
# ----------------------
# 1. 筛选平城区地图边界
# ----------------------
# 读取大同市地图数据（包含各区县）
datong_map <- st_read("assets/data/datong.json", quiet = TRUE)
# 筛选平城区（adcode=140213，确保唯一匹配）
pingcheng_map <- datong_map %>%
filter(adcode == "140213")  # 平城区adcode
# 检查是否成功筛选（应返回1行）
nrow(pingcheng_map)  # 正常应为1
# ----------------------
# 2. 平城区主要景点数据（精确坐标）
# ----------------------
pingcheng_attractions <- data.frame(
name = c(
"华严寺", "善化寺", "法华寺", "大同清真大寺",
"大同纯阳宫", "大同文庙", "大同关帝庙", "大同代王府",
"大同九龙壁", "梁思成博物馆", "大同市美术馆",
"大同市图书馆", "大同市博物馆"
),
lon = c(          # 精确到小数点后4位（匹配平城区范围）
113.2788, 113.2758, 113.3002, 113.2726,
113.2805, 113.2865, 113.2776, 113.2790,
113.2782, 113.2820, 113.3150, 113.3145, 113.3160
),
lat = c(          # 精确纬度
40.0972, 40.0961, 40.1045, 40.0935,
40.0950, 40.1005, 40.0968, 40.0975,
40.0970, 40.0920, 40.0820, 40.0815, 40.0830
)
# 转换为空间点对象（与地图坐标系一致）
attractions_sf <- st_as_sf(
pingcheng_attractions,
coords = c("lon", "lat"),
crs = st_crs(pingcheng_map)  # 继承平城区地图的坐标系
)
# ----------------------
# 3. 绘制平城区地图（优化标签版）
# ----------------------
ggplot() +
# 绘制平城区边界（浅灰底色，深灰边框）
geom_sf(data = pingcheng_map,
fill = "#f8f9fa", color = "#495057",
linewidth = 0.8, alpha = 0.9) +
# 标记景点（红色圆点，带白色边框突出显示）
geom_sf(data = attractions_sf,
color = "#e74c3c", fill = "#e74c3c",
shape = 21, size = 4, stroke = 0.8) +
# 智能标签（核心优化：自动避开重叠，带背景框）
geom_label_repel(
data = pingcheng_attractions,
aes(x = lon, y = lat, label = name),
family = "SimHei",       # 中文字体
size = 3.2,              # 字体大小
color = "#2c3e50",       # 文字颜色
fill = "white",          # 标签背景
alpha = 0.95,            # 半透明（避免遮挡地图）
box.padding = 0.2,       # 标签与点的距离（小数值更紧凑）
point.padding = 0.3,     # 点与标签边框的距离
segment.color = "#bdc3c7",  # 连接点与标签的线颜色
segment.size = 0.3,      # 连接线粗细
max.overlaps = 15,       # 允许适度重叠（适应古城密集景点）
force = 2                # 强制推开重叠标签的力度（数值越大越分散）
) +
# 精准聚焦平城区范围（去除边缘空白）
coord_sf(
xlim = st_bbox(pingcheng_map)[c("xmin", "xmax")] + c(0.02, -0.02),  # 左右缩进0.02
ylim = st_bbox(pingcheng_map)[c("ymin", "ymax")] + c(0.02, -0.02)   # 上下缩进0.02
) +
# 标题与主题设置
ggtitle("大同市平城区主要景点分布") +
theme_minimal() +
theme(
plot.title = element_text(
family = "SimHei", size = 16,
hjust = 0.5, margin = margin(b = 15)  # 标题居中，底部留白
),
panel.grid.major = element_line(
color = "#e9ecef", linewidth = 0.3  # 浅灰网格线，不干扰视觉
),
axis.text = element_text(size = 7, color = "#6c757d"),  # 经纬度刻度文字
axis.title = element_blank()  # 隐藏坐标轴标题（冗余信息）
)
