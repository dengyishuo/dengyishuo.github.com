currency("RMB")  # 设置货币为人民币
stock("maotai", currency="RMB") # 设置贵州茅台股票代码
getSymbols(symbol, from=from_Date, to=Sys.Date())
maotai <- `600519.SS` # 重命名对象
colnames(maotai) <- c("Open","High","Low","Close","Volume","Adjusted")
strategy.name <- "SMA_Strategy"
portfolio.name <- "maotai_portfolio"
account.name <- "maotai_account"
# 清除旧策略(如果存在)
rm.strat(strategy.name)
# 初始化组合、账户和策略
initPortf(portfolio.name, symbols=symbol, initDate=init_Date)
initAcct(account.name, portfolios=portfolio.name, initDate=init_Date, initEq=init_Eq)
initOrders(portfolio.name, initDate=init_Date)
strategy(strategy.name, store=TRUE)
add.indicator(
strategy = strategy.name,
name = "SMA",  # 使用SMA指标
arguments = list(x=quote(Cl(mktdata)), n=n_fast), # 5日均线
label = "SMA5"
)
add.indicator(
strategy = strategy.name,
name = "SMA",
arguments = list(x=quote(Cl(mktdata)), n=n_slow), # 10日均线
label = "SMA10"
)
add.signal(
strategy.name,
name = "sigCrossover",
arguments = list(columns=c("SMA","SMA10"), relationship="gt"), # 5日线上穿10日线
label = "golden.cross"
)
add.signal(
strategy.name,
name = "sigCrossover",
arguments = list(columns=c("SMA5","SMA10"), relationship="lt"), # 5日线下穿10日线
label = "death.cross"
)
# 金叉买入规则
add.rule(
strategy.name,
name = "ruleSignal",
arguments = list(
sigcol = "golden.cross",
sigval = TRUE,
orderqty = 100,  # 买入100股
ordertype = "market",
orderside = "long",
replace = FALSE
),
type = "enter",
label = "EnterLong"
)
# 死叉卖出规则
add.rule(
strategy.name,
name = "ruleSignal",
arguments = list(
sigcol = "death.cross",
sigval = TRUE,
orderqty = "all",  # 卖出全部持仓
ordertype = "market",
orderside = "long",
replace = FALSE
),
type = "exit",
label = "ExitLong"
)
applyStrategy(
strategy = strategy.name,
portfolios = portfolio.name
)
updatePortf(portfolio.name)
updateAcct(account.name)
updateEndEq(account.name)
# 获取交易统计数据
tstats <- tradeStats(portfolio.name)
print(tstats)
# 绘制权益曲线
equity <- getAccount(account.name)$summary$End.Eq
plot(equity, main="Strategy Equity Curve")
# 绘制持仓和交易
chart.Posn(portfolio.name, Symbol="600519.ss", TA="add_SMA(n=5,col='blue');add_SMA(n=10,col='red')")
# 获取交易统计数据
tstats <- tradeStats(portfolio.name)
print(tstats)
# 绘制权益曲线
equity <- getAccount(account.name)$summary$End.Eq
plot(equity, main="Strategy Equity Curve")
# 绘制持仓和交易
chart.Posn(portfolio.name, Symbol="600519.SS", TA="add_SMA(n=5,col='blue');add_SMA(n=10,col='red')")
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
knitr::opts_chunk$set(warning = FALSE, message = FALSE, cache = TRUE)
# 加载软件包
library(quantstrat)
library(Tushare)
library(xts)
library(dplyr)
library(showtext)
library(PerformanceAnalytics)
library(zoo)
library(tidyverse)
font_add("SimHei", regular = "SimHei.ttf")
showtext_auto()
# 清理历史环境
rm(list=ls(.blotter), envir=.blotter)
rm(list=ls(.strategy), envir=.strategy)
# 参数设置
initDate <- "2010-01-01"
endDate <- "2025-05-26"
symbol <- "600519.SS"
initEq <- 100000
fastMA <- 5
slowMA <- 20
currency("RMB")  # 设置货币为人民币
stock("maotai", currency="RMB") # 设置贵州茅台股票代码
# 获取数据
maotai <- getSymbols(symbol, from=initDate, to=endDate, src="yahoo")
maotai <- `600519.SS`
colnames(maotai) <- c("Open","High","Low","Close","Volume","Adjusted")
currency("RMB")
stock(symbol, currency="RMB", multiplier=1)
strategy.st <- "maotai_sma"
portfolio.st <- "maotai_portfolio"
account.st <- "maotai_account"
# 清除旧策略(如果存在)
if(exists("strategy.st", where=.strategy)) {
rm.strat(strategy.st)
}
# 创建组合/账户/策略
initPortf(portfolio.st, symbols=symbol, initDate=initDate)
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, initEq=initEq)
initOrders(portfolio.st, initDate=initDate)
strategy(strategy.st, store=TRUE)
# 清理历史环境
rm(list=ls(.blotter), envir=.blotter)
rm(list=ls(.strategy), envir=.strategy)
# 参数设置
initDate <- "2010-01-01"
endDate <- "2025-05-26"
symbol <- "600519.SS"
initEq <- 100000
fastMA <- 5
slowMA <- 20
# 获取数据
maotai <- getSymbols(symbol, from=initDate, to=endDate, src="yahoo")
maotai <- `600519.SS`
colnames(maotai) <- c("Open","High","Low","Close","Volume","Adjusted")
currency("RMB")
stock(symbol, currency="RMB", multiplier=1)
strategy.st <- "maotai_sma"
portfolio.st <- "maotai_portfolio"
account.st <- "maotai_account"
# 清除旧策略(如果存在)
if(exists("strategy.st", where=.strategy)) {
rm.strat(strategy.st)
}
# 创建组合/账户/策略
initPortf(portfolio.st, symbols=symbol, initDate=initDate)
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, initEq=initEq)
initOrders(portfolio.st, initDate=initDate)
strategy(strategy.st, store=TRUE)
# 添加指标
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=fastMA),
label="fastMA"
)
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=slowMA),
label="slowMA"
)
# 添加信号
add.signal(
strategy.st,
name="sigCrossover",
arguments=list(columns=c("fastMA","slowMA"), relationship="gt"),
label="fast.gt.slow"
)
add.signal(
strategy.st,
name="sigCrossover",
arguments=list(columns=c("fastMA","slowMA"), relationship="lt"),
label="fast.lt.slow"
)
add.rule(
strategy.st,
name="ruleSignal",
arguments=list(
sigcol="fast.gt.slow",
sigval=TRUE,
orderqty=100,
ordertype="market",
orderside="long",
replace=FALSE
),
type="enter",
label="EnterLONG"
)
add.rule(
strategy.st,
name="ruleSignal",
arguments=list(
sigcol="fast.lt.slow",
sigval=TRUE,
orderqty="all",
ordertype="market",
orderside="long",
replace=FALSE
),
type="exit",
label="ExitLONG"
)
applyStrategy(strategy.st,
portfolios=portfolio.st)
# 获取交易统计数据
tstats <- tradeStats(portfolio.name)
print(tstats)
# 绘制权益曲线
equity <- getAccount(account.name)$summary$End.Eq
plot(equity, main="Strategy Equity Curve")
# 绘制持仓和交易
chart.Posn(portfolio.name, Symbol=symbol, TA="add_SMA(n=fastMA,col='blue');add_SMA(n=slowMA,col='red')")
# 获取账户权益数据并转换为时间序列
equity <- getAccount(account.name)$summary$End.Eq
equity_xts <- xts(equity, order.by=index(getPortfolio(portfolio.name)$summary))
# 绘制带时间轴的权益曲线
plot(equity_xts, main="Strategy Equity Curve",
major.ticks="years", minor.ticks=NULL,
col="blue", grid.ticks.on="years")
# 获取交易统计数据
tstats <- tradeStats(portfolio.st)
print(tstats)
# 绘制权益曲线
equity <- getAccount(account.st)$summary$End.Eq
plot(equity, main="Strategy Equity Curve")
# 绘制持仓和交易
chart.Posn(portfolio.st, Symbol=symbol, TA="add_SMA(n=fastMA,col='blue');add_SMA(n=slowMA,col='red')")
# 获取交易统计数据
tstats <- tradeStats(portfolio.st)
print(tstats)
# 绘制权益曲线
equity <- getAccount(account.st)$summary$End.Eq
plot(equity, main="Strategy Equity Curve")
# 绘制持仓和交易
chart.Posn(portfolio.st, Symbol=symbol, TA="add_SMA(n=fastMA,col='blue');add_SMA(n=slowMA,col='red')")
tstats <- tradeStats(portfolio.st)
print(tstats)
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
blogdown:::stop_server()
blogdown:::serve_site()
rm(list=ls())
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# 加载软件包
library(quantstrat)
library(Tushare)
library(xts)
library(dplyr)
library(showtext)
library(PerformanceAnalytics)
library(zoo)
library(tidyverse)
font_add("SimHei", regular = "SimHei.ttf")
showtext_auto()
# 清理历史环境
rm(list=ls(.blotter), envir=.blotter)
rm(list=ls(.strategy), envir=.strategy)
# 参数设置
initDate <- "2010-01-01"
endDate <- "2025-05-26"
symbol <- "600519.SS"
initEq <- 100000
fastMA <- 5
slowMA <- 20
# 获取数据
maotai <- getSymbols(symbol, from=initDate, to=endDate, src="yahoo")
maotai <- `600519.SS`
colnames(maotai) <- c("Open","High","Low","Close","Volume","Adjusted")
currency("RMB")
stock(symbol, currency="RMB", multiplier=1)
strategy.st <- "maotai_sma"
portfolio.st <- "maotai_portfolio"
account.st <- "maotai_account"
# 清除旧策略(如果存在)
if(exists("strategy.st", where=.strategy)) {
rm.strat(strategy.st)
}
# 创建组合/账户/策略
initPortf(portfolio.st, symbols=symbol, initDate=initDate)
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, initEq=initEq)
initOrders(portfolio.st, initDate=initDate)
strategy.st <- strategy(strategy.st, store=TRUE)
# 添加指标
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=fastMA),
label="fastMA"
)
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=slowMA),
label="slowMA"
)
# 清理历史环境
rm(list=ls(.blotter), envir=.blotter)
rm(list=ls(.strategy), envir=.strategy)
# 参数设置
initDate <- "2010-01-01"
endDate <- "2025-05-26"
symbol <- "600519.SS"
initEq <- 100000
fastMA <- 5
slowMA <- 20
# 获取数据
getSymbols(symbol, from=initDate, to=endDate, src="yahoo")
maotai <- `600519.SS`
colnames(maotai) <- c("Open","High","Low","Close","Volume","Adjusted")
currency("RMB")
stock(symbol, currency="RMB", multiplier=1)
strategy.st <- "maotai_sma"
portfolio.st <- "maotai_portfolio"
account.st <- "maotai_account"
# 清除旧策略(如果存在)
if(exists("strategy.st", where=.strategy)) {
rm.strat(strategy.st)
}
# 创建组合/账户/策略
initPortf(portfolio.st, symbols=symbol, initDate=initDate)
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, initEq=initEq)
initOrders(portfolio.st, initDate=initDate)
strategy.st <- strategy(strategy.st, store=TRUE)
# 添加指标
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=fastMA),
label="fastMA"
)
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=slowMA),
label="slowMA"
)
# 安装依赖包，如果未安装
install.packages(c("quantstrat", "Tushare", "xts", "dplyr", "showtext", "zoo","PerformanceAnalytics","tidyverse"))
# 加载软件包
suppressMessages({
library(quantmod)
library(quantstrat)
library(PerformanceAnalytics)
library(Tushare)
library(xts)
library(dplyr)
library(zoo)
library(tidyverse)
})
# 清理历史环境
rm(list=ls(.blotter), envir=.blotter)
rm(list=ls(.strategy), envir=.strategy)
# 参数设置
initDate <- "2010-01-01"
endDate <- "2025-05-26"
symbol <- "600519.SS"
initEq <- 100000
fastMA <- 5
slowMA <- 20
# 获取数据
getSymbols(symbol, from=initDate, to=endDate, src="yahoo")
maotai <- `600519.SS`
colnames(maotai) <- c("Open","High","Low","Close","Volume","Adjusted")
currency("RMB")
stock(symbol, currency="RMB", multiplier=1)
strategy.st <- "maotai_sma"
portfolio.st <- "maotai_portfolio"
account.st <- "maotai_account"
# 清除旧策略(如果存在)
if(exists("strategy.st", where=.strategy)) {
rm.strat(strategy.st)
}
# 创建组合/账户/策略
initPortf(portfolio.st, symbols=symbol, initDate=initDate)
initAcct(account.st, portfolios=portfolio.st, initDate=initDate, initEq=initEq)
initOrders(portfolio.st, initDate=initDate)
strategy(strategy.st, store=TRUE)
# 添加指标
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=fastMA),
label="fastMA"
)
add.indicator(
strategy.st,
name="SMA",
arguments=list(x=quote(Cl(mktdata)), n=slowMA),
label="slowMA"
)
# 添加信号
add.signal(
strategy.st,
name="sigCrossover",
arguments=list(columns=c("fastMA","slowMA"), relationship="gt"),
label="fast.gt.slow"
)
add.signal(
strategy.st,
name="sigCrossover",
arguments=list(columns=c("fastMA","slowMA"), relationship="lt"),
label="fast.lt.slow"
)
add.rule(
strategy.st,
name="ruleSignal",
arguments=list(
sigcol="fast.gt.slow",
sigval=TRUE,
orderqty=100,
ordertype="market",
orderside="long",
replace=FALSE
),
type="enter",
label="EnterLONG"
)
add.rule(
strategy.st,
name="ruleSignal",
arguments=list(
sigcol="fast.lt.slow",
sigval=TRUE,
orderqty="all",
ordertype="market",
orderside="long",
replace=FALSE
),
type="exit",
label="ExitLONG"
)
applyStrategy(strategy.st,
portfolios=portfolio.st)
updatePortf(portfolio.st)
updateAcct(account.st)
updateEndEq(account.st)
# 获取交易统计数据
tstats <- tradeStats(portfolio.st)
print(tstats)
# 绘制权益曲线
equity <- getAccount(account.st)$summary$End.Eq
plot(equity, main="Strategy Equity Curve")
# 绘制持仓和交易
chart.Posn(portfolio.st, Symbol=symbol, TA="add_SMA(n=fastMA,col='blue');add_SMA(n=slowMA,col='red')")
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
# 加载软件包
library(quantstrat)
library(Tushare)
library(xts)
library(dplyr)
library(showtext)
library(PerformanceAnalytics)
library(zoo)
library(tidyverse)
library(knitr)
library(kableExtra)
font_add("SimHei", regular = "SimHei.ttf")
showtext_auto()
strategyObj
strategyObj <- getStrategy(strategy.st)
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::serve_site()
blogdown::stop_server()
blogdown:::new_post_addin()
getwd()
setwd("/Users/matrixspk/test")
blogdown::new_site()
getwd()
setwd("/Users/matrixspk/My-Sites/x-quant")
blogdown::new_site()
blogdown:::serve_site()
blogdown:::stop_server()
